const assert = require("assert");
const ganache = require("ganache");
const { Web3 } = require("web3");
const web3 = new Web3(ganache.provider());

const { abi, evm } = require("../bc-products/compile");

let products;
let accounts;

beforeEach(async () => {
  accounts = await web3.eth.getAccounts();

  products = await new web3.eth.Contract(abi)
    .deploy({ data: evm.bytecode.object })
    .send({ from: accounts[0], gas: "3000000" });
});
describe("Dapazon Contract", () => {
  it("deploys a contract", () => {
    assert.ok(products.options.address);
  });

  it("allows a user to create a product", async () => {
    await products.methods.setProduct(1, "Product 1", 1000, 2).send({
      from: accounts[0],
      gas: "3000000",
    });

    await products.methods.setProduct(2, "Product 2", 500, 10).send({
      from: accounts[0],
      gas: "3000000",
    });
  });

  it("allows a user to get the products count", async () => {
    await products.methods.setProduct(1, "Product 1", 1000, 5).send({
      from: accounts[0],
      gas: "3000000",
    });

    await products.methods.setProduct(2, "Product 2", 2000, 3).send({
      from: accounts[0],
      gas: "3000000",
    });

    const productsCount = await products.methods.productsCount().call();
    // console.log("productcount:", productsCount);
    assert.equal(productsCount, 2);
  });
});
